<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Электоронные таблицы</title>

<link href="/labs/a/css/business.css" rel="stylesheet" type="text/css" />
<style type="text/css">
DT { font-weight: bold}
</style>
</head>

<body>
<h1>Электоронные таблицы</h1>
<h2>Формулы</h2>
<h3>Синтаксис</h3>
<p>Формулы должны всегда начинаться со знака равенства или плюса.</p>
<p><code>=(MOD(A1,B1)+INT(A1/B1)*B1 )</code></p>
<dl>
<dt>Диапазон —</dt>
<dd>через точку с запятой. Пример <code>=SUM(A1:A2)</code>.</dd>
<dt>Ссылка на ячейку</dt>
<dd>В скобках. Пример <code>=(A1)</code>.</dd>
<dt>Ссылка на ячейку в другом листе</dt>
<dd>Название листа заключается в одинарные кавычки, ячейка присрединяется восклицательным знаком. Пример <code>'Лист один'!A1</code>.</dd>
<dt>Объединение текста и результатов функций / формул / значений ячеек —</dt>
<dd>Через амперсанд. Текст заключается в кавычки. Пример <code>=&quot;Текст&quot;&amp;'Название листа'!A1&amp;&quot;Еще текст&quot;</code>.</dd>
</dl>
<h3>Операторы</h3>
<ul>
<li>+ — плюс</li>
<li>- — минус</li>
<li>* — знак множения</li>
<li>/ — знак деления</li>
<li>^ — знак возведения в степень. Например, <code>2 ^ 3 —&gt; 8</code></li>
</ul>
<p class="caption">Знаки сравнения</p>
<ul>
<li>= — знак равенства </li>
<li>&lt;&gt; — знак неравенства</li>
<li>&lt;  — меньше, чем. Например, <code>1 &lt; 2 --&gt; TRUE</code>.</li>
<li>&lt;= — меньше или равно. Например, <code>3 &lt;= 2 --&gt; FALSE</code>.</li>
<li>&gt; — больше, чем</li>
<li>&gt;= больше или равно.</li>
</ul>
<p>В арифметияческих операциях логические (булевые) значения будет конвертированы в цифры: TRUE в 1, FALSE. Таким образом, <code>TRUE + 1 —&gt; 2</code> и <code>FALSE * 3 —&gt; 0</code><br />
</p>
<p>Чтобы избежать подмены цифрового значения логическим и, в частности, деления на ноль, в операциях следует объединять операции в скобках. Например,<code> ( (2*(3+1))/(4-5*7) ) &gt; 0</code></p>
<p>Чтоьбы избежать дления на ноль в прочих случаях (деление на сумму незаполненных ячеек) применяется оператор if. <code>=IF(A1=0;&quot;&quot;;A1/B1)</code></p>
<h2>Функции</h2>
<p>Синтаксис функций в Excel, Google Docs Spreadheets (GdSS) и Numbers похож. Отличия:  в Excel параметры функций отделяются запятой, в Numbers и в GdSS — точкой с запятой; в Numbers название большинства функций переведены. (полный список см. Справка Numbers &gt; Справка по формулам и функциям iWork или <a href="https://support.google.com/docs/bin/static.py?hl=ru&amp;topic=25273&amp;page=table.cs">Список функций Таблиц Google</a>)</p>
<dl>
<dt>SUM —</dt>
<dd>Сумма. Слагаемые-диапазоны перечисляются через запятую. Пример <code>=SUM(A1:B2 , D4:E7)</code>.</dd>
<dt>ROUND(число; счетчик) —</dt>
<dd>Округляет заданное число до определенного количества знаков после запятой согласно математическим правилам. Счетчик (необязательный параметр) – это количество разрядов, до которого необходимо округлить заданное число. Пример =ROUND(1000/618;1) </dd>
<dt>CEILING(число; точность) —</dt>
<dd>Похожая на ROUND функция. <strong>Но вотличие от ROUND может  округлять не только до десятичных дробей, но и до дестяков, сотен и т.д</strong>. Точность — это значение, кратное 10, до которого необходимо округлить заданное число: 1 — целые числа, 0,1 — до десятичных дробей, 1000 — до тысяч.  Пример <code>=Ceiling(1000/618;0,1)</code>.</dd>
<dt>TO_PERCENT(число) —</dt>
<dd>Перевод числа в проценты. Пример <code>=TO_PERCENT (D6/E6)</code>.</dd>
<dt>INT(число) —</dt>
<dd>возвращает целое число. Пример <code>=Int(1300/618)</code>.</dd>
<dt>MOD(делимое; делитель)  —</dt>
<dd>Возвращает остаток после деления заданного числа на делитель. Делимое – это число, которое делится на делитель. Делитель – это число, на которое делится делимое.</dd>
<dt>Countif (СЧЕТЕСЛИ) —</dt>
<dd><code>=СЧЕТЕСЛИ(тест-множество;условие)</code><br />
Подсчитывает количество упоминаний в заданном диапазоне ячеек. Например, <code>=countif(B13:B17;B8)</code> — сколько раз значение из ячейки B8 (Lara) повторяется в ячейках с B13 по B17 (столбец Name). <strong>Практическое применение: </strong>в плане проекта — подсчет количества задач, назначенных на одного сотрудника.<img src="/labs/a/img/management/spreadsheets-formulas-countif.gif" width="182" height="374" alt="" /></dd>
<dt>Vlookup (ВПР) —</dt>
<dd><code>=ВПР(искомое;диапазон_столбцов;столбец_возврата;)</code><br />
Ищет значения в строке с одним известным значением. Например, <code>=vlookup(F8,F13:G17,2,)</code> — в столбцах Name и City (F13:G17) ищется значение Jason (F8), затем извлекается значение строки во втором столбце заданного диапазона (в пример этот параметр — 2). <strong>Практическое применение: </strong>в плане проекта — поиск ответственного в листе ресурсов и подстановка его в лист задач.<img src="/labs/a/img/management/spreadsheets-formulas-vlookup.gif" width="190" height="374" alt="" /></dd>
<dt>Sumif (СУММЕСЛИ) —</dt>
<dd><code>=СУММЕСЛИ(тест-значения;условие;)</code><br />
Подсчитывает суммы в ячейках, отличающих какому-то условию. Например <code>=sumif(J11:K15,J6,K11:K15)</code> — в столбцах Name и Points (J11:K11) ищутся строки содержащие значение Clair (J6), затем подсчитывается значения строк Chair вс толбце Points (K11:K15). 25+44+36=105. <strong>Практическое применение: </strong>в плане проекта — суммирование в листе задач, назначенных какому-то сотруднику и передача результата в его строку в листе ресурсов.<img src="/labs/a/img/management/spreadsheets-formulas-sumif.gif" width="187" height="357" alt="" /></dd>
<dt>Countblank (СЧИТАТЬПУСТОТЫ) —</dt>
<dd><code>=СЧИТАТЬПУСТОТЫ(диапазон)</code><br />
Подсчитывает количество пустых ячеек в заданном диапазоне. Например, <code>=countblank(N11:N15)</code> — количество пустых ячеек в столбце Index (N11:N15).<img src="/labs/a/img/management/spreadsheets-formulas-count-blank.gif" width="182" height="303" alt="" /></dd>
</dl>
</body>
</html>