<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Scrum / Agile</title>

<link href="/labs/a/css/business.css" rel="stylesheet" type="text/css" />
</head>

<body>
<h1>Scrum  / Agile</h1>
<h2 class="kicker">Scrum — это способ организации труда,  позволяющий в жёстко фиксированные небольшие промежутки времени (итерации — <em>спринты</em>: оптимально — 2 недели, но по теории допускается до 4 недель) предоставлять конечному пользователю работающее ПО с  новыми возможностями, для которых определён наибольший приоритет. </h2>
<p>Возможности ПО к реализации в очередном спринте определяются в начале  спринта на этапе планирования и не могут изменяться на всём его  протяжении. При этом строго-фиксированная небольшая длительность спринта  придаёт процессу разработки предсказуемость и гибкость.</p>
<p>Документацию проекта можно вести, как в электронных таблицах Google Doc, так и в специальной онлайн-программе <a href="http://www.pivotaltracker.com/features" target="_blank">Pivotal Tracker</a> (от $7 в месяц).</p>
<h2>Главные действующие роли в Scrum</h2>
<ol>
<li><em>Руководтель проекта Владелец продукта</em> (<em>Product Owner</em>) —  человек, который представляет интересы конечных пользователей и других  заинтересованных в продукте сторон. Наделен властью принимать окончательные безоговорочные решения.</li>
<li><em>ScrumMaster</em> (серетарь собраний) — тот, кто ведёт планёрки и следит, чтобы при этом соблюдались все принципы <em>Scrum</em> (в идеале, руководитель проекта не должен являться <em>ScrumMaster</em>, но в маленьких группах эти обязанности может выполнять каждый участник группы поочередно);</li>
<li>Кросс-функциональная <em>Команда</em> (<em>Scrum Team</em>),  состоящая как из разработчиков, так и из тестировщиков, аналитиков и т. д. Размер команды в идеале составляет 7±2  человека. Команда является единственным полностью вовлечённым  участником разработки, и отвечает за результат как единое целое. Никто  кроме команды не может вмешиваться в процесс разработки на протяжении  спринта.</li>
</ol>
<h2>ТЗ — Product Backlog</h2>
<p>ПО разрабатывается по упрощенной форме ТЗ (<em>product backlog</em>). Этот документ состоит из двух частей.</p>
<p class="caption">В первой части</p>
<ol>
<li>дается четкое определение товара,</li>
<li>формулируются исчисляемые цели и сроки их достижения,</li>
<li>определяются степени готовности продукта: MVP (minimum viable product) и усовершенствованных версий.</li>
</ol>
<p>Вторая часть <em>product backlog</em> состоит из списка требований к функциональности, «историй» (<em>user story</em> или <em>backlog items</em>), которые упорядочены по степени важности. </p>
<p>«История» обычно записывается от первого лица некоего пользователя, который пытается решить какую-то задачу. Например, «Я неавторизован. Хочу авторизоваться, чтобы получить доступ к приложению». Или «Я авторизован. Хочу изменить пароль». Или «Я администратор сайта, авторизован, хочу добавить новых пользователей». Такое ТЗ составляется руководителем проекта до официального начала проекта — ранжировать можно методом карточек.</p>
<p class="caption"><strong>Обязательные поля
product backlog</strong></p>
<ul>
<li><strong>ID</strong> — уникальный идентификатор, не может менять при изменении порядка элементов.</li>
<li><strong>Название</strong> — краткое, однозначное описание истории.</li>
<li><strong>Важность</strong> — обычно представляет собой натуральное число.</li>
<li><strong>Сложность </strong>— оценка трудности. Этот столбец заполняется позже — <a href="#meetings">на планёрках</a>.</li>
<li><strong>Как продемонстрировать</strong> — краткое пояснение  того, как завершённая задача будет продемонстрирована в конце спринта.  Данное поле может представлять собой код автоматизированного теста для  приёмо-сдаточного испытания. Также заполняется на планёрках.</li>
</ul>
<p class="caption"><strong>Дополнительные поля </strong></p>
<ul>
<li><strong>Категория</strong> (<em>track</em>). Например, «панель управления» или  «оптимизация». При помощи этого поля product owner может легко выбрать  все пункты категории «оптимизация» и установить им низкий приоритет.</li>
<li><strong>Компоненты</strong> — указывает, какие компоненты  (например, база данных, сервер, клиент) будут затронуты при реализации  истории. Данное поле состоит из группы checkbox’ов, которые отмечаются,  если соответствующие компоненты требуют изменений.</li>
<li><strong>Инициатор запроса</strong> (<em>requestor</em>). <em>Product owner</em> может захотеть хранить информацию о всех заказчиках, заинтересованных в  данной задаче. Это нужно для того, чтобы держать их в курсе дела о ходе  выполнения работ.</li>
<li><strong>ID в системе учёта дефектов</strong> — если используется отдельная система для учёта дефектов (например. <a href="http://ru.wikipedia.org/wiki/Atlassian_JIRA" title="Atlassian JIRA">Jira</a>).</li>
</ul>
<h2>Рабочие совещания</h2>
<p>Планёрки и другие рабочие совещания проводятся в начале рабочего дня, чтобы не разбивать его на части — IT-специалистам требуется более длительные периоды для решения отдельных задач, чем управленцам.</p>
<p>На планерках и совещаниях ставятся цели, определяеются  условия (<strong>что нужно программистам, чтобы приступить к работе — эскиз на бумаге или статичный HTML-макет?</strong>) и подводятся итоги.</p>
<h2>Планёрки</h2>
<p id="meetings"><strong>Набор возможностей, которые реализуются в каждом спринте, определяются в ходе первого этапа спринта, его <em>планёрки</em>.</strong> На  этом собрании руководитель проекта информирует о заданиях, которые по его мнению должны быть выполнены (в основном уже известные по product backlog, но, может быть, и новые идеи, появившиеся в ходя разработки). Команда оценивает сложность работы: сначала — на уровне историй, затем — на уровне задач.</p>
<h3>Оценка сложности на уровне историй</h3>
<p>Каждая «история» из списка руководителя оценивается выбранным исполнителем: он назначает свою «цену» задачи в абстрактных единицах, story point’ах: чаще всего — это ряд Фибоначчи, но некоторые команды используют простую последовательность цифр от 1 до 10 или размеры одежды XS, S, M, L, XL, XXL, XXXL. Точность оценки увеличивается с каждой новой итерацией. </p>
<h3>Оценка сложности методом «планового покера»</h3>
<p>Для большей точности используется процедура коллективной оценки — плановый покер. </p>
<ul>
<li>Каждый участник команды имеет по колоде карт. Это могут быть самодельные или специальные фабричные scrum-карты — с номиналами из ряда Фибоначчи, а также картой ? («не могу оценить») и картой «чашка кофе» (нужно еще подумать). Но проще всего использовать неполные колоды обычных карт, отобранных также в прогрессии Фибоначчи: Туз (1), 2 ,3 5, 8 и король. Король значит «эта задача слишкомбольшая или слишком трудна для оценки». Появление короля на столе означает перенос сложной задачи на следующий спринт (руководитель проекта за это время разобьет ее на меньшие). Можно обойтись и без бумажных карт — сыграть в <a href="http://www.planningpoker.com/" target="_blank">плановый онлайн-покер</a>.</li>
<li>На стол выкладываются карты — рубашками вверх.</li>
<li>Руководитель проекта поочередно объявляет истории на спринт или весь проект (на самой первой планёрке). Команда задает вопросы. При этом избегая предварительных оценок. Руководитель делает, если нужно, записи на будущее.</li>
<li>После того, как вопросы заканчиваются, все одновременно вскрывает карту с собственной оценкой.</li>
<li>Участники с самой высокой и с самой низкой оценкой должны объяснить свое решение, затем либо продолжается дискуссия, либо повторно вскрываются карты с оценками. И так до тех пор, пока не будет достигнута консенсусная оценка.</li>
<li>Чтобы не затягивать совещание ведущий или руководитель проекта может включить таймер обратного отчета: 5 минут. За это время либо коллектив приходит к консенсусу, либо руководитель выбирает среднюю оценку.</li>
</ul>
<h3>Первая планёрка</h3>
<p>Планёрки не должны длится более 4 часов — но, как правило столько времени и не требуется. За одним исключением — самой первой планёрки проекта. На ней нужно оценить минимум 80% всех историй, сгруппировать из по спринтам, а также рассчитать среднюю скорость работы: очков/на спринт. Это может занять целый день или даже два — в зависимости от сложности проекта.</p>
<p>По итогам первой планёрки руководитель проекта может изменить приоритеты в ТЗ, с учетом коэффициента усилия/отдача. А также составить или <em>исправить</em> «дорожную карту». Она, кстати, может быть совсем простой. Например:</p>
<ol>
<li>Первый спринт — 39 очков // Приблизительная скорость
<ul>
<li>Первая история — 21</li>
<li>Вторая и. — 13</li>
<li>Третья и. — 5</li>
</ul>
</li>
<li>Второй спринт — 37
<ul>
<li> Четвертая и. — 13</li>
<li> Пятая и. — 13</li>
<li> Шестая и. — 8</li>
<li>Седьмая и. — 3</li>
</ul>
</li>
<li>Третий спринт — 40…</li>
</ol>
<p>На каждой следующей планерки «дорожная карта» редактируется: проектная скорость пересчитывается с учетом реальных результатов, пересматриваются сроки или, что чаще лучше — список «историй», которые будут реализованы к намеченным и неизменным срокам.</p>
<p>После первой планёрки руководитель проекта готовит также другую  форму«дорожной карты» — <span id="result_box2" lang="ru" xml:lang="ru"><a href="http://devprom.ru/news/Agile-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-Burndown-Chart" target="_blank">график сгорания</a></span> проекта. Ось Y — очки, ось X — спринты. Этот график отображает прогресс проекта (запланировано/выполнено) и на протяжении всего срока работ должен быть доступен всем заинтересованным лицам</p>
<h3>Оценки на уровне задач</h3>
<p>После оценки в абстрактных очках каждая «история» из списка руководителя разбивается на задачи — сформулированные, как шаги по программной реализации истории.</p>
<p>На этом этапе команда определяет, сколько задач сможет выполнить за 2 недели. А что из списка руководителя следует отложить на следующий спринт.</p>
<p><strong>Таким образом утверждается определенный фиксированный план спринта</strong> (<em>sprint backlog</em>, состоящий из <em>backlog items</em>). А перенос выбранных задач на календарь превращает абстрактные единицы в идеальные человеко-часы. (Если при первой оценки длительность выполнения задачи превышает день, ее следует разбить на меньшие задачи).</p>
<p>План спринта будет выглядеть примерно так:</p>
<ul>
<li>Семнадцатая история
<ol>
<li>Первая задача — 8 часов</li>
<li>Вторая — 6</li>
<li>Третья — 2.</li>
</ol>
</li>
<li>Восемнадцатая история
<ol>
<li>Первая задача — 8</li>
<li>Вторая — 6</li>
</ol>
</li>
<li>Девятнадцатая история
<ol>
<li>Первая задача — 6</li>
<li>Вторая — 3</li>
</ol>
</li>
</ul>
<p>План спринта записывается также в форме <span id="result_box" lang="ru" xml:lang="ru">графика сгорания</span>: Y — часы, X — дни.</p>
<p><img src="/labs/a/img/design-n-development/burndown.png" width="640" alt="" /></p>
<p>На планёрке также обсуждается и определяется, каким образом будет реализован намеченный объём работ.</p>
<h2>Итерации и другие совещания</h2>
<p>После планёрки начинается   работа — на протяжении каждого <em>спринта</em> создаётся функциональный рост программного обеспечения. Никто в это время уже <strong>не имеет права  менять план на спринт</strong> (<strong>sprint backlog</strong>).<img src="/labs/a/img/design-n-development/scrum-process.png" width="800" alt="" /></p>
<p>Вместе с тем команда продолжает обсуждать планы и проект.</p>
<p class="caption"><strong>Ежедневные совещания </strong></p>
<ul>
<li>Начинаются точно вовремя — в начале рабочего дня.</li>
<li>Проводятся в одном и том же месте в течение спринта.</li>
<li>Длятся не более 15 минут.</li>
<li>Могут присутствовать заказчики.</li>
<li>На совещании каждый член команды отвечает на 3 вопроса.
<ul>
<li>Что сделано с момента предыдущего совещания?</li>
<li>Что будет сделано к следующему совещанию?</li>
<li>Какие проблемы мешают достижению целей спринта? (Проблемы решаются после совещания узким составом).</li>
</ul>
</li>
<li>Реальные достижения отмечаются — хотя бы шоколадками.</li>
</ul>
<p class="caption"><strong>Презентация результатов спринта (Demo Meeting) </strong></p>
<ul>
<li>Происходит в конце итерации (спринта).</li>
<li>Команда демонстрирует результат работы всем заинтересованным лицам.</li>
<li>Привлекается максимальное количество зрителей.</li>
<li>Все члены команды участвуют в демонстрации — каждый показывает, что сделал за спринт.</li>
<li>Ограничена 4-мя часами в зависимости от продолжительности итерации и результата.</li>
</ul>
<p class="caption"><strong>Совещание по итогам спринта (Retrospective Meeting)</strong></p>
<ul>
<li>Все члены команды рассказывают своё отношение к ходу прошедшего спринта.</li>
<li>Отвечают на два основных вопроса (Что было сделано хорошо в прошедшем спринте? Что надо улучшить или не допускать в следующем?)</li>
<li>Выполняют улучшение процесса разработки (решают вопросы и фиксируют удачные решения)</li>
<li>Ограничена 1—3-мя часами.</li>
</ul>
<p>Стенограммы совещаний (который должен вести ScrumMaster) желательно публиковать во внутрекорпоративной сети — прозрачность проектов способствует укреплению доверия в коллективах.</p>
<p class="caption"><strong>Friday Pizza</strong></p>
<p>Еженедельное неформальное совместное времяпрепровождение в нерабочее время.</p>
</body>
</html>